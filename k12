<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Namma Weather</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <style>
      /* General Styles */
      body {
        font-family: Arial, sans-serif;
        background: #f0f0f0;
        color: #333;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }

      /* Navbar Styles */
      .navbar {
        background-color: #333;
        padding: 1rem;
      }

      .nav-list {
        list-style-type: none;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
      }

      .nav-item {
        margin: 0 10px;
      }

      .nav-item a {
        color: white;
        text-decoration: none;
        font-size: 1rem;
      }

      .nav-item a:hover {
        color: #4caf50;
      }

      /* Logo Styles */
      .logo {
        position: absolute;
        top: 10px;
        left: 10px;
        font-family: Arial, sans-serif;
      }

      .logo h1 {
        font-size: 20px;
        color: #ff6347; /* Orange color */
        margin: 0;
        padding: 0;
      }

      /* Content Styles */
      .container {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
        flex: 1; /* Allow the container to grow and fill the space */
      }

      .form {
        margin-bottom: 20px;
      }

      #input {
        padding: 10px;
        width: 100%;
        max-width: 300px;
        border-radius: 5px;
        border: 1px solid #ccc;
        box-sizing: border-box;
      }

      .button {
        padding: 10px 20px;
        margin-left: 10px;
        border: none;
        background-color: #4caf50;
        color: white;
        cursor: pointer;
        border-radius: 5px;
        font-size: 1rem;
      }

      .result-container {
        margin-top: 20px;
      }

      .result-box {
        display: inline-block;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 100%;
      }

      .loader {
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        width: 60px;
        height: 60px;
        animation: spin 2s linear infinite;
        margin: auto;
        display: none;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      /* About Page Styles */
      .about-section {
        text-align: center;
        padding: 20px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin: 20px auto;
        max-width: 800px;
      }

      .about-section h3 {
        font-size: 2rem;
        color: #333;
        margin-bottom: 10px;
      }

      .about-section p {
        font-size: 1rem;
        color: #555;
        margin: 10px 0;
        line-height: 1.5;
      }

      .about-section ul {
        list-style-type: none;
        padding: 0;
        text-align: left;
        margin: 0 auto;
        max-width: 600px;
      }

      .about-section li {
        margin: 5px 0;
      }

      /* Footer Styles */
      footer {
        background-color: #333;
        color: white;
        padding: 10px;
        position: relative;
        bottom: 0;
        left: 0;
        width: 100%;
        text-align: center;
      }

      /* Social Media Links */
      .social-links {
        margin-top: 10px;
      }

      .social-links a {
        color: white;
        text-decoration: none;
        margin: 0 10px;
        font-size: 1.2rem;
      }

      .social-links a:hover {
        color: #4caf50;
      }

      /* Responsive Styles */
      @media (max-width: 768px) {
        .navbar {
          padding: 0.5rem;
        }

        .nav-item {
          margin: 0 5px;
        }

        .nav-item a {
          font-size: 0.9rem;
        }

        .logo h1 {
          font-size: 18px;
        }

        .button {
          font-size: 0.9rem;
          padding: 8px 16px;
        }
      }

      @media (max-width: 480px) {
        .logo {
          position: static;
          margin: 10px auto;
        }

        .nav-list {
          flex-direction: column;
        }

        .nav-item {
          margin: 5px 0;
        }

        .container {
          padding: 10px;
        }

        .button {
          width: 100%;
          margin: 10px 0;
          font-size: 1rem;
        }

        .about-section h3 {
          font-size: 1.5rem;
        }

        .about-section p {
          font-size: 0.9rem;
        }
      }
    </style>
  </head>
  <body>
    <!-- Logo -->
    <div class="logo">
      <h1>üåû‚òÅÔ∏è Namma Weather ‚òÄÔ∏èüåßÔ∏è</h1>
    </div>

    <!-- Navbar -->
    <nav class="navbar">
      <ul class="nav-list">
        <li class="nav-item"><a href="#" onclick="showHome()">Home</a></li>
        <li class="nav-item"><a href="#" onclick="showAbout()">About</a></li>
        <li class="nav-item">
          <a href="https://github.com/kishan9535">Contributors</a>
        </li>
      </ul>
    </nav>

    <!-- Main Content -->
    <div id="home" class="container">
      <header>
        <div class="homepage">
          <h1 class="landing-text">Namma Weather</h1>
          <p class="landing-text-2">
            Where Is The Sun? Is It Above Or Below The Clouds?
          </p>
        </div>
      </header>

      <!-- Search Form -->
      <div class="form">
        <input id="input" type="text" placeholder="Enter a city name" />
        <button id="button" class="button" onclick="getWeather()">GO</button>
        <button
          id="location-button"
          class="button"
          onclick="getLocationWeather()"
        >
          Use My Location
        </button>
      </div>

      <!-- Weather Result -->
      <div class="result-container">
        <div id="loader" class="loader"></div>
        <div id="result" class="result-box" style="display: none">
          <h2 id="city-name"></h2>
          <p id="weather-desc"></p>
          <p><strong>Temperature:</strong> <span id="temperature"></span>¬∞C</p>
          <p><strong>Humidity:</strong> <span id="humidity"></span>%</p>
          <p><strong>Wind Speed:</strong> <span id="wind-speed"></span> km/h</p>
        </div>
      </div>

      <!-- Hourly Weather Chart -->
      <div id="hourly-chart-container" style="display: none">
        <canvas id="hourlyChart" width="400" height="200"></canvas>
      </div>
    </div>

    <!-- About Page -->
    <div id="about" class="about-section" style="display: none">
      <h3>About Namma Weather</h3>
      <p>
        Namma Weather is an innovative web application designed to provide users
        with quick and accurate weather updates for their chosen cities. Our aim
        is to empower users with real-time weather information, making it easier
        for them to plan their daily activities and stay informed about the
        weather conditions.
      </p>

      <h3>Features</h3>
      <ul>
        <li>Real-time weather data for any city around the world.</li>
        <li>User-friendly interface with a simple search functionality.</li>
        <li>Hourly temperature forecasts to help you plan your day.</li>
        <li>Interactive charts for visualizing weather trends.</li>
        <li>Location-based weather updates using geolocation.</li>
      </ul>

      <h3>Tools and Technologies</h3>
      <p>
        The Namma Weather website was built using the following tools and
        technologies:
      </p>
      <ul>
        <li><strong>HTML5</strong> - For the structure of the website.</li>
        <li><strong>CSS3</strong> - For styling and layout.</li>
        <li>
          <strong>JavaScript</strong> - For interactive features and dynamic
          content.
        </li>
        <li>
          <strong>Chart.js</strong> - For displaying the hourly weather chart.
        </li>
        <li>
          <strong>OpenWeatherMap API</strong> - For fetching weather data.
        </li>
      </ul>

      <h3>Get Involved</h3>
      <p>
        We welcome contributions from the community! If you have suggestions,
        bug reports, or wish to contribute to the project, please visit our
        <a href="https://github.com/kishan9535" target="_blank"
          >GitHub repository</a
        >.
      </p>
    </div>

    <!-- Footer -->
    <footer>
      <div class="social-links">
        <a href="https://www.facebook.com/" target="_blank"
          ><i class="fab fa-facebook-f"></i
        ></a>
        <a href="https://www.twitter.com/" target="_blank"
          ><i class="fab fa-twitter"></i
        ></a>
        <a href="https://www.instagram.com/" target="_blank"
          ><i class="fab fa-instagram"></i
        ></a>
        <a href="https://www.linkedin.com/" target="_blank"
          ><i class="fab fa-linkedin-in"></i
        ></a>
        <a href="https://github.com/kishan9535" target="_blank"
          ><i class="fab fa-github"></i
        ></a>
        <a href="https://leetcode.com/kishan9535/" target="_blank"
          ><i class="fab fa-leetcode"></i
        ></a>
      </div>
      <p>&copy; <span id="copyrightYear"></span> Kishan‚Ñ¢</p>
    </footer>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      const apiKey = "361f461bd053e84661b77a41ae71cf2b"; // Your OpenWeather API key

      function showHome() {
        document.getElementById("home").style.display = "block";
        document.getElementById("about").style.display = "none";
      }

      function showAbout() {
        document.getElementById("home").style.display = "none";
        document.getElementById("about").style.display = "block";
      }

      function getWeather() {
        const city = document.getElementById("input").value.trim();

        if (!city) {
          alert("Please enter a city name.");
          return;
        }

        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(
          city
        )}&appid=${apiKey}&units=metric`;
        const forecastUrl = `https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&exclude=current,minutely,daily,alerts&appid=${apiKey}&units=metric`;

        fetchWeatherData(weatherUrl, forecastUrl);
      }

      function getLocationWeather() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition((position) => {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;
            const forecastUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,daily,alerts&appid=${apiKey}&units=metric`;
            fetchWeatherData(weatherUrl, forecastUrl);
          });
        } else {
          alert("Geolocation is not supported by this browser.");
        }
      }

      function fetchWeatherData(weatherUrl, forecastUrl) {
        document.getElementById("loader").style.display = "block";
        document.getElementById("result").style.display = "none";
        document.getElementById("hourly-chart-container").style.display =
          "none";

        fetch(weatherUrl)
          .then((response) => response.json())
          .then((data) => {
            document.getElementById("loader").style.display = "none";
            document.getElementById("result").style.display = "block";

            document.getElementById("city-name").innerText = data.name;
            document.getElementById("weather-desc").innerText =
              data.weather[0].description;
            document.getElementById("temperature").innerText = data.main.temp;
            document.getElementById("humidity").innerText = data.main.humidity;
            document.getElementById("wind-speed").innerText = data.wind.speed;

            fetch(forecastUrl)
              .then((response) => response.json())
              .then((forecastData) => {
                displayHourlyChart(forecastData.hourly);
              });
          })
          .catch((error) => {
            document.getElementById("loader").style.display = "none";
            alert("Error fetching weather data. Please try again.");
          });
      }

      function displayHourlyChart(hourlyData) {
        const hours = [];
        const temps = [];

        hourlyData.forEach((hour) => {
          const date = new Date(hour.dt * 1000);
          hours.push(`${date.getHours()}:00`);
          temps.push(hour.temp);
        });

        document.getElementById("hourly-chart-container").style.display =
          "block";

        const ctx = document.getElementById("hourlyChart").getContext("2d");
        new Chart(ctx, {
          type: "line",
          data: {
            labels: hours,
            datasets: [
              {
                label: "Hourly Temperature (¬∞C)",
                data: temps,
                borderColor: "rgba(75, 192, 192, 1)",
                borderWidth: 1,
                fill: false,
              },
            ],
          },
          options: {
            scales: {
              y: {
                beginAtZero: true,
              },
            },
          },
        });
      }

      document.getElementById("copyrightYear").innerText =
        new Date().getFullYear();
    </script>
  </body>
</html>
